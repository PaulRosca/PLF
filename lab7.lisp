(defun cdr-sim (l)
    (setq i 0)
    (setq cdrl '())
    (dolist (el l)
        (if (not (= i 0))
            (setq cdrl (cons el cdrl))
        )
        (setq i (+ i 1))
    )
    (return-from cdr-sim (reverse cdrl))
)
(defun max-lista (l)
    (setq maxl (car l))
    (dolist (el l)
        (if (> el maxl)
            (setq maxl el)
        )
    )
    (return-from max-lista maxl)
)
(defun factorial (n &optional (f 1))
    (if (< n 1)
        f
        (factorial (- n 1) (* n f))
    )
)
(defun pare (l)
    (setq lp '())
    (dolist (el l)
        (if (evenp el)
            (setq lp (cons el lp))
        )
    )
    (return-from pare (reverse lp))
)
(defmacro suma-macr (&rest nr)
    (cons '+ nr)
)